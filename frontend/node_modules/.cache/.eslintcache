[{"/mnt/2C6876AC68767504/IIT_hackathon/iit_hackathon/frontend/src/index.js":"1","/mnt/2C6876AC68767504/IIT_hackathon/iit_hackathon/frontend/src/App.js":"2","/mnt/2C6876AC68767504/IIT_hackathon/iit_hackathon/frontend/src/reportWebVitals.js":"3","/mnt/2C6876AC68767504/IIT_hackathon/iit_hackathon/frontend/src/components/BaseMap.js":"4"},{"size":535,"mtime":1699009492894,"results":"5","hashOfConfig":"6"},{"size":615,"mtime":1699010095236,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":1699009492895,"results":"8","hashOfConfig":"6"},{"size":2566,"mtime":1699010455916,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","suppressedMessages":"12","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},"1xzxila",{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"13"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"13"},{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},"/mnt/2C6876AC68767504/IIT_hackathon/iit_hackathon/frontend/src/index.js",[],[],["25"],"/mnt/2C6876AC68767504/IIT_hackathon/iit_hackathon/frontend/src/App.js",["26"],[],"import logo from './logo.svg';\nimport './App.css';\nimport BaseMap from './components/BaseMap';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n\n      <BaseMap />\n      {/* <header className=\"App-header\"> */}\n        {/* <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n        </p>\n        <a\n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a> */}\n      {/* </header> */}\n    </div>\n  );\n}\n\nexport default App;\n","/mnt/2C6876AC68767504/IIT_hackathon/iit_hackathon/frontend/src/reportWebVitals.js",[],[],"/mnt/2C6876AC68767504/IIT_hackathon/iit_hackathon/frontend/src/components/BaseMap.js",["27","28"],[],"// BaseMap.js\nimport React, { useRef } from 'react';\nimport { MapContainer, TileLayer, Marker, Popup, GeoJSON } from 'react-leaflet';\nimport countryData from '../geo_json_data/countries.json';\n\nconst BaseMap = () => {\n  const mapRef = useRef(null);\n\n  const handleClick = (e) => {\n    const { lat, lng } = e.latlng;\n    mapRef.current.setView([lat, lng], 8); // Adjust the zoom level as needed\n  };\n\n  const onCountryMouseOver = (e) => {\n    e.target.setStyle({\n      fillColor: 'blue', // Change the fill color when hovered\n      weight: 2, // Add a border when hovered\n    });\n  };\n\n  const onCountryMouseOut = (e) => {\n    e.target.setStyle({\n      fillColor: 'gray', // Restore the default fill color\n      weight: .5, // Restore the default border\n    });\n  };\n\n  const onCountryClicked = (e) => {\n    e.target.setStyle({\n      fillColor: 'red', // Restore the default fill color\n      weight: 1, // Restore the default border\n    });\n    // console.log(e)\n  };\n\n\n\n  const onEachCountry = (country, layer) => {\n    const countryName = country.properties.ADMIN;\n    console.log(countryName)\n    layer.bindPopup(countryName)\n    layer.on({\n        // click: this.onCountryClick,\n        mouseover: onCountryMouseOver,\n        mouseout: onCountryMouseOut,\n        click: onCountryClicked,\n    })\n  }\n\n  return (\n    <MapContainer\n      center={[51.505, -0.09]}\n      zoom={8}\n      style={{ width: '100%', height: '800px' }}\n      ref={mapRef}\n      onClick={handleClick}\n      maxZoom={8} // Set the maximum zoom level (adjust as needed)\n      minZoom={3}\n      continuousWorld={false}\n      maxBounds={[\n        [90, -180], // Upper left limit (latitude, longitude)\n        [-90, 180], // Lower right limit (latitude, longitude)\n      ]}\n    >\n      <TileLayer\n        url=\"https://{s}.tile.openstreetmap.fr/hot/{z}/{x}/{y}.png\"\n        // url='https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png'\n      />\n\n      {/* Add GeoJSON layer for country boundaries */}\n      <GeoJSON\n        data={countryData}\n        style={() => ({\n          fillColor: 'gray', // Initial fill color\n          weight: 1, // Initial border weight\n          color: 'black', // Border color\n        })}\n        // onEachFeature={(feature, layer) => {\n        //   layer.on({\n        //     mouseover: onCountryMouseOver, // Hover effect\n        //     mouseout: onCountryMouseOut, // Restore default style\n        //     click: onCountryClicked,\n        //   });\n        // }}\n\n        onEachFeature={onEachCountry}\n      />\n\n      \n    </MapContainer>\n  );\n};\n\nexport default BaseMap;\n",{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":1,"column":8,"nodeType":"33","messageId":"34","endLine":1,"endColumn":12},{"ruleId":"31","severity":1,"message":"35","line":3,"column":35,"nodeType":"33","messageId":"34","endLine":3,"endColumn":41},{"ruleId":"31","severity":1,"message":"36","line":3,"column":43,"nodeType":"33","messageId":"34","endLine":3,"endColumn":48},"no-new-object",["37"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Marker' is defined but never used.","'Popup' is defined but never used.","no-object-constructor"]